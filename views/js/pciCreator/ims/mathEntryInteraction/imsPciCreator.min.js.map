{"version":3,"sources":["../../../qtiItemPci/views/js/pciCreator/ims/mathEntryInteraction/creator/tpl/propertiesForm!tpl","../../../qtiItemPci/views/js/pciCreator/ims/mathEntryInteraction/creator/tpl/addGapBtn!tpl","../../../qtiItemPci/views/js/pciCreator/ims/mathEntryInteraction/creator/widget/states/Question.js","../../../qtiItemPci/views/js/pciCreator/ims/mathEntryInteraction/creator/widget/states/Correct.js","../../../qtiItemPci/views/js/pciCreator/ims/mathEntryInteraction/creator/tpl/answerForm!tpl","../../../qtiItemPci/views/js/pciCreator/ims/mathEntryInteraction/creator/tpl/addAnswerOption!tpl","../../../qtiItemPci/views/js/pciCreator/ims/mathEntryInteraction/creator/widget/states/Map.js","../../../qtiItemPci/views/js/pciCreator/ims/mathEntryInteraction/creator/widget/states/states.js","../../../qtiItemPci/views/js/pciCreator/ims/mathEntryInteraction/creator/widget/Widget.js","../../../qtiItemPci/views/js/pciCreator/ims/mathEntryInteraction/creator/tpl/markup!tpl","../../../qtiItemPci/views/js/pciCreator/ims/mathEntryInteraction/imsPciCreator.js"],"names":["define","hb","template","Handlebars","depth0","helpers","partials","data","program1","program3","this","compilerInfo","merge","stack1","helper","options","buffer","helperMissing","escapeExpression","self","__","hash","call","identifier","serial","authorizeWhiteSpace","inverse","noop","fn","program","useGapExpression","unless","tool_sqrt","tool_frac","tool_exp","tool_subscript","tool_log","tool_ln","tool_e","tool_infinity","roundbkts","curlybkts","squarebkts","tool_integral","tool_angle","tool_triangle","tool_similar","tool_paral","tool_perp","tool_pi","tool_cos","tool_sin","tool_lower","tool_greater","tool_lte","tool_gte","tool_equal","tool_plus","tool_minus","tool_times","tool_timesdot","tool_divide","tool_plusminus","tool_inmem","tool_ninmem","tool_union","tool_intersec","allowNewLine","enableAutoWrap","$","stateFactory","Question","formElement","simpleEditor","containerEditor","formTpl","addGapBtnTpl","toBoolean","value","defaultValue","configChangeCallBack","interaction","name","prop","triggerPci","getProperties","$addGapBtn","MathEntryInteractionStateQuestion","extend","$container","widget","$prompt","find","element","create","change","text","updateMarkup","markup","markupSelector","related","areaBroker","getAreaBroker","createAddGapBtn","addMathFieldListener","destroy","removeAddGapBtn","prototype","initForm","$gapStyleBox","$gapStyleSelector","_widget","$form","response","getResponseDeclaration","html","attr","focusOnDenominator","initWidget","setChangeCallbacks","i","id","show","hide","gapStyle","newStyle","select2","width","minimumResultsForSearch","Infinity","val","trigger","onPci","latex","$toolbar","length","after","on","removeMapEntries","off","remove","Correct","setTemplate","changeState","index","functionType","apply","increaseIndex","key","each","correctAnswerEntries","_","Map","answerFormTpl","addAnswerOptionBtn","registerHelper","parseInt","MathEntryInteractionStateResponse","initGlobalVariables","emptyGapFields","toggleResponseMode","saveAnswers","removeResponseChangeEventListener","removeEditDeleteListeners","removeAddButtonListener","destroyForm","activeEditId","correctResponses","inGapMode","gapTemplate","$responseForm","initResponseChangeEventListener","getExistingCorrectAnswerOptions","initAddAnswerButton","renderForm","newCorrectAnswer","gapExpression","gapCount","match","push","join","mapEntries","getMapEntries","keys","getResponse","base","string","offPci","initEditingOptions","click","e","preventDefault","stopImmediatePropagation","selectedEditId","target","closest","getGapResponseObject","split","clearMapEntries","forEach","mapKey","removeMapEntry","initDeletingOptions","splice","correctAnswerOptions","append","$entryConfig","responseDeclaration","filter","indexOf","setMapEntry","factory","states","createBundle","arguments","Widget","MathEntryInteractionWidget","clone","initCreator","$interaction","registerStates","addClass","prompt","markupTpl","getTypeIdentifier","getWidget","getDefaultProperties","inResponseState","tool_lbrack","tool_rbrack","tool_lbrace","tool_rbrace","tool_lparen","tool_rparen","afterCreate","pci","getMarkupTemplate","getMarkupData","defaultData","IMSPCI"],"mappings":"AACAA,OAAA,uDAAA,cAAA,SAAAC,IACA,MAAAA,IAAAC,SAAA,SAAAC,WAAAC,OAAAC,QAAAC,SAAAC,MAKA,QAAAC,UAAAJ,OAAAG,MAGA,MAAA,oBAGA,QAAAE,UAAAL,OAAAG,MAGA,MAAA,uBAbAG,KAAAC,cAAA,EAAA,YACAN,QAAAK,KAAAE,MAAAP,QAAAF,WAAAE,SAAAE,KAAAA,QACA,IAAAM,QAAAC,OAAAC,QAAAC,OAAA,GAAAC,cAAAZ,QAAAY,cAAAC,iBAAAR,KAAAQ,iBAAAC,KAAAT,IA4PA,OA9OAM,SAAA,6DACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB,GAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,sBAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,sBAAAW,WACA,uKACAG,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB;uVAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,kUAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,kUAAAW,WACA;+yBACAD,OAAAT,QAAAkB,YAAAV,OAAAC,OAAAQ,KAAAlB;uDAAAiB,QAAAd,KAAAA,QACAO,OAAAV,QAAAA,OAAAmB,WAAAV,OApBA,kBAoBAC,QAAAA,OAAAQ,KAAAlB,QAAAiB,QAAAd,KAAAA,OAAAO,QACAE,QAAAE,iBAAAL,QACA,oIACAC,OAAAT,QAAAmB,QAAAX,OAAAC,OAAAQ,KAAAlB,QAAAiB,QAAAd,KAAAA,QACAO,OAAAV,QAAAA,OAAAoB,OAAAX,OAxBA,kBAwBAC,QAAAA,OAAAQ,KAAAlB,QAAAiB,QAAAd,KAAAA,OAAAO,QACAE,QAAAE,iBAAAL,QACA,2CACAK,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB;mIAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,UAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,UAAAW,WACA,gHACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAAqB,qBAAAJ,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,gEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB;+HAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,wBAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,wBAAAW,WACA,2GACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAA0B,kBAAAT,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,gEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB;+HAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,2BAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,2BAAAW,WACA,gEACAF,OAAAR,QAAA0B,OAAAT,KAAAlB,OAAAA,QAAAA,OAAA0B,kBAAAT,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAApB,SAAAF,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,sCACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB,GAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,WAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,WAAAW,WACA,iHACAG,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB;2QAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,QAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,QAAAW,WACA,4DACAG,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB,GAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,SAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,SAAAW,WACA,2DACAG,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB;iNAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,QAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,QAAAW,WACA,mFACAG,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB,GAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,YAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,YAAAW,WACA;2MACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAA4B,WAAAX,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,scACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB;qgBAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,cAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,cAAAW,WACA;gOACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAA6B,WAAAZ,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,gEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB,GAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,WAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,WAAAW,WACA;yNACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAA8B,UAAAb,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,yEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB,GAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,WAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,WAAAW,WACA;+NACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAA+B,gBAAAd,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,yEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB,GAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,YAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,YAAAW,WACA;2NACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAAgC,UAAAf,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,gEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB,GAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,MAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,MAAAW,WACA;8MACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAAiC,SAAAhB,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,gEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB,GAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,KAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,KAAAW,WACA,mDACAG,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB;iMAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,UAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,UAAAW,WACA,mGACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAAkC,QAAAjB,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA;iMACAH,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAAmC,eAAAlB,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,2LACAH,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAAoC,WAAAnB,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD;iCAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,oEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB,GAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,6BAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,6BAAAW,WACA,uHACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAAqC,WAAApB,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,oEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB;mIAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,wBAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,wBAAAW,WACA,wHACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAAsC,YAAArB,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,oEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB;mIAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,kBAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,kBAAAW,WACA,2HACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAAuC,eAAAtB,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,yEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB;wIAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,sBAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,sBAAAW,WACA,mDACAG,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB,GAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,WAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,WAAAW,WACA,uGACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAAwC;yDAAAvB,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,sEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB,GAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,QAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,QAAAW,WACA,2HACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAAuC,eAAAtB,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA;aACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,gEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB,GAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,sBAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,sBAAAW,WACA,+HACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAAyC,eAAAxB,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,wEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB;uIAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,WAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,WAAAW,WACA,0HACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAA0C,cAAAzB,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,sEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB;qIAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,UAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,UAAAW,WACA,wHACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAA2C,YAAA1B,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,wEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB;uIAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,mBAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,mBAAAW,WACA,uHACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAA4C,WAAA3B,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,wEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB;uIAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,sBAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,sBAAAW,WACA,mDACAG,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB,GAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,eAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,eAAAW,WACA,oGACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAA6C;sDAAA5B,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,uLACAH,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAA8C,UAAA7B,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,gEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB,GAAAL,SAAAM,QAAAd,KAAAA;WAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,UAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,UAAAW,WACA,sHACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAA+C,UAAA9B,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,gEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB,GAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,QAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,QAAAW,WACA,mDACAG,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB;uMAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,aAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,aAAAW,WACA,uGACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAAgD,YAAA/B,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,qEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB;oIAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,aAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,aAAAW,WACA,0HACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAAiD,cAAAhC,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,qEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB;oIAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,eAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,eAAAW,WACA,sHACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAAkD,UAAAjC,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,gEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB;+HAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,IAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,IAAAW,WACA,IACAG,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB,GAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,sBAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,sBAAAW,WACA,sHACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAAmD,UAAAlC,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD;iCAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,gEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB,GAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,IAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,IAAAW,WACA,IACAG,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB,GAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,wBAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,wBAAAW,WACA,mDACAG,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB,GAAAL,SAAAM,QAAAd,KAAAA;WAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,WAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,WAAAW,WACA,uGACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAAoD,YAAAnC,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,kEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB,GAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,QAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,QAAAW,WACA;oNACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAAqD,WAAApC,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,kEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB,GAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,OAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,OAAAW,WACA;mNACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAAsD,YAAArC,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,kEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB,GAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,QAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,QAAAW,WACA;qNACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAAuD,YAAAtC,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,wEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB,GAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,QAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,QAAAW,WACA;wNACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAAwD,eAAAvC,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,kEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB,GAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,YAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,YAAAW,WACA;8NACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAAyD,aAAAxC,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,yEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB,GAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,SAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,SAAAW,WACA;2NACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAA0D,gBAAAzC,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,uEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB,GAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,aAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,aAAAW,WACA;+NACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAA2D,YAAA1C,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,gEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB,GAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,iBAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,iBAAAW,WACA;wOACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAA4D,aAAA3C,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,gEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB,GAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,qBAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,qBAAAW,WACA;+OACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAA6D,YAAA5C,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,gEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB,GAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,YAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,YAAAW,WACA;gOACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAA8D,eAAA7C,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,gEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB,GAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,mBAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,mBAAAW,WACA,oHACAG,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB;8RAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,oBAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,oBAAAW,WACA,kHACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAA+D,cAAA9C,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA;aACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,gEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB,GAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,mBAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,mBAAAW,WACA,4HACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAAgE,gBAAA/C,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,gEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB;+HAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,mBAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,mBAAAW,WACA,iCC/PAf,OAAA,kDAAA,cAAA,SAAAC,IACA,MAAAA,IAAAC,SAAA,SAAAC,WAAAC,OAAAC,QAAAC,SAAAC,MACAG,KAAAC,cAAA,EAAA,YACAN,QAAAK,KAAAE,MAAAP,QAAAF,WAAAE,SAAAE,KAAAA,QACA,IAAAO,QAAAC,QAAAC,OAAA,GAAAC,cAAAZ,QAAAY,aAMA,OAHAD,SAAA,mEACAE;qFAJAR,KAAAQ,mBAIAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB,GAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,UAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,UAAAW,WACA,iBCQAf,OAAA,uDACA,SACA,OACA,+CACA,6DACA,oDACA,4DACA,+CACA,sDACA,kDACA,SAAAqE,EAAAjD,GAAAkD,aAAAC,SAAAC,YAAAC,aAAAC,gBAAAC,QAAAC;oiBACA,YAoCA,SAAAC,WAAAC,MAAAC,cACA,WAAA,KAAA,MACAA,cAEA,IAAAD,OAAA,SAAAA,MASA,QAAAE,sBAAAC,YAAAH,MAAAI;sDACAD,YAAAE,KAAAD,KAAAJ,OACAG,YAAAG,WAAA,gBAAAH,YAAAI,kBAjDA,GAAAC,YAAAjB,EAAAO,gBAEAW,kCAAAjB,aAAAkB,OAAAjB,SAAA,WACA,GAAAkB,YAAA/E,KAAAgF,OAAAD,WACAE,QAAAF,WAAAG,KAAA,WACAX,YAAAvE,KAAAgF,OAAAG,OAEAnB,iBAAAoB,OAAAH,SACAI,OAAA,SAAAC,MACAf,YAAA1E,KAAA,SAAAyF,MACAf,YAAAgB,gBAEAC,OAAAjB,YAAAiB,OACAC,eAAA,UACAC,QAAAnB,YACAoB,WAAA3F,KAAAgF,OAAAY,kBAGAzB,UAAAI,YAAAE,KAAA,qBAAA,IACAzE,KAAA6F,kBAGA7F,KAAA8F;6BAEA,WACA,GAAAf,YAAA/E,KAAAgF,OAAAD,WACAE,QAAAF,WAAAG,KAAA,UAEAnB,cAAAgC,QAAAhB,YACAf,gBAAA+B,QAAAd,SAEAjF,KAAAgG,mBA0NA,OArMAnB,mCAAAoB,UAAAC,SAAA,WAEA,GAKAC,cACAC,kBANA3F,KAAAT,KACAqG,QAAArG,KAAAgF,OACAsB,MAAAD,QAAAC,MACA/B,YAAA8B,QAAAlB,QACAoB,SAAAhC,YAAAiC,wBAKAF,OAAAG,KAAAxC,SACAnD,OAAAyF,SAAAzF,OACAD,WAAA0D,YAAAmC,KAAA,sBAEA3F,oBAAAoD,UAAAI,YAAAE,KAAA,wBAAA,GACArD,iBAAA+C,UAAAI,YAAAE,KAAA,qBAAA;oEACAkC,mBAAAxC,UAAAI,YAAAE,KAAA,uBAAA,GAEAlD,UAAA4C,UAAAI,YAAAE,KAAA,cAAA,GACAnD,UAAA6C,UAAAI,YAAAE,KAAA,cAAA,GACAjD,SAAA2C,UAAAI,YAAAE,KAAA,aAAA,GACA/C,SAAAyC,UAAAI,YAAAE,KAAA,aAAA,GACA9C,QAAAwC,UAAAI,YAAAE,KAAA,YAAA,GACA7C,OAAAuC,UAAAI,YAAAE,KAAA,WAAA,GACA5C,cAAAsC,UAAAI,YAAAE,KAAA,kBAAA,GACAzC,WAAAmC,UAAAI,YAAAE,KAAA,gBAAA,IAAAN,UAAAI,YAAAE,KAAA,gBAAA,GACAlC,QAAA4B,UAAAI,YAAAE,KAAA,YAAA,GACAjC,SAAA2B,UAAAI,YAAAE,KAAA,aAAA;oDACAhC,SAAA0B,UAAAI,YAAAE,KAAA,aAAA,GACA7B,SAAAuB,UAAAI,YAAAE,KAAA,aAAA,GACA5B,SAAAsB,UAAAI,YAAAE,KAAA,aAAA,GACAxB,WAAAkB,UAAAI,YAAAE,KAAA,eAAA,GACAtB,YAAAgB,UAAAI,YAAAE,KAAA,gBAAA,GACArB,eAAAe,UAAAI,YAAAE,KAAA,mBAAA,GACA3C,UAAAqC,UAAAI,YAAAE,KAAA,gBAAA,IAAAN,UAAAI,YAAAE,KAAA,gBAAA,GACA1C,UAAAoC,UAAAI,YAAAE,KAAA,gBAAA,IAAAN,UAAAI,YAAAE,KAAA,gBAAA,GACAvC,WAAAiC,UAAAI,YAAAE,KAAA,eAAA,GACAzB,WAAAmB,UAAAI,YAAAE,KAAA,eAAA;wDACA1B,UAAAoB,UAAAI,YAAAE,KAAA,cAAA,GACA3B,WAAAqB,UAAAI,YAAAE,KAAA,eAAA,GACA/B,WAAAyB,UAAAI,YAAAE,KAAA,eAAA,GACA9B,aAAAwB,UAAAI,YAAAE,KAAA,iBAAA,GACAhD,eAAA0C,UAAAI,YAAAE,KAAA,mBAAA,GACAxC,cAAAkC,UAAAI,YAAAE,KAAA,kBAAA,GACAvB,cAAAiB,UAAAI,YAAAE,KAAA,kBAAA,GACAtC,cAAAgC,UAAAI,YAAAE,KAAA,kBAAA,GACArC,aAAA+B,UAAAI,YAAAE,KAAA,iBAAA,GACApC,WAAA8B,UAAAI,YAAAE,KAAA,eAAA,GACAnC,UAAA6B,UAAAI,YAAAE,KAAA,cAAA;sDACApB,WAAAc,UAAAI,YAAAE,KAAA,eAAA,GACAnB,YAAAa,UAAAI,YAAAE,KAAA,gBAAA,GACAlB,WAAAY,UAAAI,YAAAE,KAAA,eAAA,GACAjB,cAAAW,UAAAI,YAAAE,KAAA,kBAAA,GACAhB,aAAAU,UAAAI,YAAAE,KAAA,iBAAA,GACAf,eAAAS,UAAAI,YAAAE,KAAA,mBAAA,MAIAX,YAAA8C,WAAAN,OAGAxC,YAAA+C,mBAAAP,MAAA/B,aACA1D,WAAA,SAAAiG,EAAA1C,OACAmC,SAAAQ,GAAA3C,OACAG,YAAAmC,KAAA,qBAAAtC,QAEAhD,iBAAA,SAAA0F,EAAA1C,OACAD,UAAAC,OAAA,IACA3D,KAAAoF,kBACAM,aAAAa,SAEAF,EAAArC,KAAA,gBAAA;iDACAhE,KAAAuF,kBACAG,aAAAc,QAGAV,SAAAG,KAAA,cAAA,UACApC,qBAAAwC,EAAA1C,MAAA,qBAEA8C,SAAA,SAAAJ,EAAAK,UAEAL,EAAArC,KAAA,WAAA0C,UAEA7C,qBAAAwC,EAAAK,SAAA,aAEApG,oBAAAuD,qBACAqC,mBAAArC,qBAEA/C,UAAA+C,qBACAhD,UAAAgD,qBACA9C,SAAA8C,qBACA5C,SAAA4C,qBACA3C,QAAA2C,qBACA1C,OAAA0C,qBACAzC,cAAAyC,qBACA/B,QAAA+B,qBACA9B,SAAA8B,qBACA7B,SAAA6B;8BACA1B,SAAA0B,qBACAzB,SAAAyB,qBACArB,WAAAqB,qBACAnB,YAAAmB,qBACAlB,eAAAkB,qBACApC,WAAAoC,qBACAtB,WAAAsB,qBACAvB,UAAAuB,qBACAxB,WAAAwB,qBACA5B,WAAA4B,qBACA3B,aAAA2B,qBACA7C,eAAA6C,qBACArC,cAAAqC,qBACApB,cAAAoB,qBACAnC,cAAAmC,qBACAlC,aAAAkC,qBACAjC,WAAAiC,qBACAhC,UAAAgC,qBACAjB,WAAAiB,qBACAhB,YAAAgB;iCACAf,WAAAe,qBACAd,cAAAc,qBAEAtC,WAAA,SAAA8E,EAAA1C,OACA0C,EAAArC,KAAA,cAAAL,OACA0C,EAAArC,KAAA,cAAAL,OACA0C,EAAApC,WAAA,gBAAAoC,EAAAnC,mBAEA7C,UAAA,SAAAgF,EAAA1C,OACA0C,EAAArC,KAAA,cAAAL,OACA0C,EAAArC,KAAA,cAAAL,OACA0C,EAAApC,WAAA,gBAAAoC,EAAAnC,mBAEA5C,UAAA,SAAA+E,EAAA1C,OACA0C,EAAArC,KAAA,cAAAL,OACA0C,EAAArC,KAAA,cAAAL,OACA0C,EAAApC,WAAA,gBAAAoC,EAAAnC,mBAGAlB,aAAAa,qBACAZ,eAAAY,uBAIA6B,aAAAG,MAAApB,KAAA,sBACAkB,kBAAAD,aAAAjB,KAAA;4DAEAkB,kBAAAgB,SACAC,MAAA,OACAC,wBAAAC,EAAAA,IAEAC,IAAAjD,YAAAE,KAAA,aACAgD,QAAA,WAOA5C,kCAAAoB,UAAAH,qBAAA,WACA,GAAAO,SAAArG,KAAAgF,OACAT,YAAA8B,QAAAlB,OAEAZ,aAAAmD,MAAA,iBAAA,SAAAC,OACAxD,UAAAI,YAAAE,KAAA,qBAAA,GACAF,YAAAE,KAAA,gBAAAkD,OAEApD,YAAAE,KAAA,gBAAA,OAQAI,kCAAAoB,UAAAJ,gBAAA,WACA,GAAAQ,SAAArG,KAAAgF,OACAD,WAAAsB,QAAAtB,WACA6C,SAAA7C,WAAAG,KAAA,YACAX,YAAA8B,QAAAlB;sHAEAyC,UAAAC,SACAD,SAAAE,MAAAlD,YACAA,WAAAmD,GAAA,QAAA,WACAxD,YAAAiC,yBAAAwB,mBACAzD,YAAAG,WAAA,cAQAG,kCAAAoB,UAAAD,gBAAA,WACApB,WAAAqD,IAAA,SACArD,WAAAsD,UAGArD,oCCvQAvF,OAAA,sDACA,+CACA,gDACA,SAAAsE,aAAAuE,SACA,YAYA,OAVAvE,cAAAwB,OACA+C,QACA;+CACAnI,KAAAgF,OAAAG,QAAAqB,yBAAA4B,YAAA,gBACApI,KAAAgF,OAAAqD,YAAA,QAEA,gBC5BA/I,OAAA,mDAAA,cAAA,SAAAC,IACA,MAAAA,IAAAC,SAAA,SAAAC,WAAAC,OAAAC,QAAAC,SAAAC,MAKA,QAAAC,UAAAJ,OAAAG,MAEA,GAAAM,QAAAC,OAAAC,QAAAC,OAAA,EAYA,OAXAA,SAAA,qEACAE,kBAAAL,OAAA,MAAAN,OAAA,IAAAA,KAAAA,KAAAA,KAAAyI,YAAAnI,UAAAoI,aAAApI,OAAAqI,MAAA9I,QAAAS,SACA,gCACAK,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB;kJAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,wBAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,wBAAAW,WACA,IACAG,kBAAAJ,OAAAT,QAAA8I,eAAA/I,QAAAA,OAAA+I,cAAApI,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,MAAAG,OAAA,IAAAA,KAAAA,KAAAA,KAAAyI,MAAAjI,SAAAE,cAAAK,KAAAlB,OAAA,gBAAA,MAAAG,OAAA,IAAAA,KAAAA,KAAAA,KAAAyI,MAAAjI,WACA,4JACAG,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB;uXAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,kBAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,kBAAAW,WACA,gOACAG,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB;wYAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,oBAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,oBAAAW,WACA,4GAjBAL,KAAAC,cAAA,EAAA;iCACAN,QAAAK,KAAAE,MAAAP,QAAAF,WAAAE,SAAAE,KAAAA,QACA,IAAAM,QAAAC,OAAAC,QAAAC,OAAA,GAAAiI,aAAA,WAAA/H,iBAAAR,KAAAQ,iBAAAD,cAAAZ,QAAAY,cAAAE,KAAAT,IA2BA,OARAM,SAAA,mEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB,GAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,2BAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,2BAAAW,WACA,6EACAG,kBAAAL,OAAA,MAAAN,OAAA,IAAAA,KAAAA,KAAAA,KAAA6I;mRAAAvI,UAAAoI,aAAApI,OAAAqI,MAAA9I,QAAAS,SACA,kGACAA,OAAAR,QAAAgJ,KAAA/H,KAAAlB,OAAAA,QAAAA,OAAAkJ,sBAAAjI,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA;uFC9BAhB,OAAA,wDAAA,cAAA,SAAAC,IACA,MAAAA,IAAAC,SAAA,SAAAC,WAAAC,OAAAC,QAAAC,SAAAC,MACAG,KAAAC,cAAA,EAAA,YACAN,QAAAK,KAAAE,MAAAP,QAAAF,WAAAE,SAAAE,KAAAA,QACA,IAAAO,QAAAC,QAAAC,OAAA,GAAAC,cAAAZ,QAAAY,aAMA,OAHAD,SAAA,8EACAE,EAJAR,KAAAQ,mBAIAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB,GAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,oBAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,oBAAAW,WACA;yICOAf,OAAA,kDACA,aACA,OACA,SACA,SACA,+CACA,2CACA,oDACA,kDACA,wDACA,SACAC,GACAmB,GACAmI,EACAlF,EACAC,aACAkF,IACAhF,YACAiF,cACAC,oBAEA,YAEAzJ,IAAA0J,eAAA,gBAAA,SAAA7E,MAAA/D,SACA,MAAA6I,UAAA9E,OAAA,GAGA,IAAA+E,mCAAAvF,aAAAwB,OACA0D,IACA;0EACA9I,KAAAoJ,sBACApJ,KAAAkG,YAEA,WACAlG,KAAAqJ,iBACArJ,KAAAsJ,oBAAA,GACAtJ,KAAAuJ,cACAvJ,KAAAwJ,oCACAxJ,KAAAyJ,4BACAzJ,KAAA0J,0BACA1J,KAAA2J,eA4PA,OAvPAR,mCAAAlD,UAAAmD,oBAAA,WACA,GAAA3I,MAAAT,KACAuE,YAAA9D,KAAAuE,OAAAG,OACA1E,MAAAmJ,aAAA,KACAnJ,KAAAoJ,qBAEA,IAAA7J,KAAA8J,UAAArJ,QACA8D,YAAA9D,KAAAuE,OAAAG,QACA1E,KAAAsJ,YAAAxF,YAAAE,KAAA,mBAIA0E,kCAAAlD,UAAAC,SAAA;gEACA,GAAAzF,MAAAT,KAEAgK,eADAvJ,KAAAuE,OAAAG,QACA1E,KAAAuE,OAAAgF,cAEAhK,MAAAiK,kCACAxJ,KAAAoJ,iBAAA7J,KAAAkK,kCACAF,cAAAvD,KAAAuC,sBACAhJ,KAAAmK,sBACAnK,KAAAoK,WAAA3J,KAAAoJ,mBAGAV,kCAAAlD,UAAAkE,oBAAA,WACA,GAAA1J,MAAAT,KACAuE,YAAA9D,KAAAuE,OAAAG,OACA1E,MAAAuE,OAAAgF,cACA9E,KAAAvB,EAAA,uBAEAoE,GAAA,QAAA,WACA,GAAAsC,iBAEA,KAAA,IAAA5J,KAAAqJ,YAAA,CACArJ,KAAA4I,gBACA,IAAAiB,eAAA/F,YAAAE,KAAA,iBACA8F,UAAAD,cAAAE,MAAA,kBAAA3C;2GACA,IAAA0C,SAAA,EAAA,CACAF,mBACA,KAAA,GAAAvD,GAAA,EAAAA,EAAAyD,SAAAzD,IACAuD,iBAAAI,KAAA,IAGAJ,kBAAAA,iBAAAK,KAAA,SAEAL,kBAAA,OAGAA,kBAAA,GACA5J,KAAA6I,oBAAA,EAGA7I,MAAAoJ,iBAAAY,KAAAJ,kBACA5J,KAAA2J,WAAA3J,KAAAoJ,qBAIAV,kCAAAlD,UAAAiE,gCAAA,WACA,GAAAzJ,MAAAT,KACAuE,YAAA9D,KAAAuE,OAAAG,QAEAwF,WAAApG,YAAAiC,yBAAAoE,eACA,OAAA/B,GAAAgC,KAAAF,iBAGAxB,kCAAAlD,UAAAgE,gCAAA;uFACA,GAAAxJ,MAAAT,KACAuE,YAAA9D,KAAAuE,OAAAG,OAEAZ,aAAAmD,MAAA,iBAAA,SAAAC,OACA,GAAAlH,KAAAqJ,UAAArJ,OAAA,MAAAA,KAAAmJ,cAEA,GAAAnJ,KAAAqJ,UAAArJ,OAAA,MAAAA,KAAAmJ,aAAA,CACA,GAAArD,UAAAhC,YAAAuG,aACArK,MAAAoJ,iBAAApJ,KAAAmJ,cAAArD,SAAAwE,KAAAC,YAHAvK,MAAAoJ,iBAAApJ,KAAAmJ,cAAAjC,SAQAwB,kCAAAlD,UAAAuD,kCAAA,WACAxJ,KACAgF,OAAAG,QAEA8F,OAAA,mBAGA9B,kCAAAlD,UAAAiF,mBAAA,WACA,GAAAzK,MAAAT,KACAuE,YAAA9D,KAAAuE,OAAAG;6CACA1E,MAAAuE,OAAAgF,cACA9E,KAAA,iBACAA,KAAA,gBAEAiG,MAAA,SAAAC,GACAA,EAAAC,iBACAD,EAAAE,2BACA7K,KAAA6I,oBAAA,EACA,IAAAiC,gBAAArC,SAAAvF,EAAAyH,EAAAI,QAAAC,QAAA,OAAA/E,KAAA,cAEA,IAAAjG,KAAAmJ,eAAA2B,eAEA,IAAA,IAAA9K,KAAAqJ,YAAA,CACArJ,KAAAmJ,aAAA2B,cACA,IAAAhF,UAAA9F,KAAAiL,qBAAAjL,KAAAoJ,iBAAApJ,KAAAmJ,cACArF,aAAAG,WAAA,iBAAA6B,eAEA9F,MAAAmJ,aAAA2B,eACAhH,YAAAG,WAAA,cAAAjE,KAAAoJ,iBAAApJ,KAAAmJ,oBAGAnJ,MAAA4I,oBAMAF,kCAAAlD,UAAAyF,qBAAA,SAAAnF;oFACA,OACAwE,MACAC,OAAAzE,SAAAoF,MAAA,QAMAxC,kCAAAlD,UAAA2F,gBAAA,WACA,GAAAnL,MAAAT,KACAuE,YAAA9D,KAAAuE,OAAAG,QACAoB,SAAAhC,YAAAiC,yBACAmE,WAAApE,SAAAqE,eAEA/B,GAAAgC,KAAAF,YAAAkB,QAAA,SAAAC,QACAvF,SAAAwF,eAAAD,QAAA,MAIA3C,kCAAAlD,UAAA+F,oBAAA,WACA,GAAAvL,MAAAT,IACAS,MAAAuE,OAAAG,OACA1E,MAAAuE,OAAAgF,cACA9E,KAAA,iBACAA,KAAA,kBAEAiG,MAAA,SAAAC,GACAA,EAAAC,iBACAD,EAAAE,0BACA,IAAAvE,IAAAmC,SAAAvF,EAAAyH,EAAAI,QAAAC,QAAA,OAAA/E,KAAA;iEAEA,IAAAjG,KAAAqJ,aACArJ,KAAAmJ,aAAA7C,GACAtG,KAAA4I,mBAEA5I,KAAAmJ,aAAA,KACAnJ,KAAA6I,oBAAA,IAGA7I,KAAAoJ,iBAAAoC,OAAAlF,GAAA,GACAtG,KAAA2J,WAAA3J,KAAAoJ,qBAIAV,kCAAAlD,UAAAmE,WAAA,SAAA8B,sBACA,GAAAzL,MAAAT,KACAgK,cAAAvJ,KAAAuE,OAAAgF,aAEAhK,MAAAyJ,4BACAO,cAAA9E,KAAA,yBAAAgD,SACA8B,cAAAmC,OAAApD,eAAAH,qBAAAsD,wBACAlM,KAAAgM,sBACAhM,KAAAkL,sBAMA/B,kCAAAlD,UAAAwD,0BAAA;iFACA,GAAAhJ,MAAAT,KACAoM,aAAA3L,KAAAuE,OAAAgF,cAAA9E,KAAA,gBAEAkH,cAAAlH,KAAA,gBAAA+C,IAAA,SACAmE,aAAAlH,KAAA,kBAAA+C,IAAA,UAGAkB,kCAAAlD,UAAAyD,wBAAA,WACA1J,KACAgF,OAAAgF,cAEA9E,KAAAvB,EAAA,uBAAAsE,IAAA,UAGAkB,kCAAAlD,UAAA0D,YAAA,WACA3J,KACAgF,OAAAgF,cAEA9E,KAAA,yBAAAgD,UAGAiB,kCAAAlD,UAAAsD,YAAA,WACA,GAAA9I,MAAAT,KACAuE,YAAA9D,KAAAuE,OAAAG,QACAkH,oBAAA9H,YAAAiC;sGAEAxG,MAAA4L,mBAEA,IAAA5L,KAAA8J,cACArJ,KAAAoJ,iBAAApJ,KAAAoJ,iBAAAyC,OAAA,SAAA/F,UACA,OAAA,IAAAA,SAAAoF,MAAA,KAAAY,QAAA,OAIA9L,KAAAoJ,iBAAAgC,QAAA,SAAAtF,UACA8F,oBAAAG,YAAAjG,SA1OA,GA0OA,MAOA4C,kCAAAlD,UAAAoD,eAAA,WACA,GAAA5I,MAAAT,KACAuE,YAAA9D,KAAAuE,OAAAG,SAEA,IAAAnF,KAAA8J,cACArJ,KAAAmJ,aAAA,KAEArF,YAAAE,KAAA,gBAAAhE,KAAAsJ,aACA/J,KAAAsJ,oBAAA,KAIAH,kCAAAlD,UAAAqD,mBAAA,SAAAlF;+EACA,GAAA3D,MAAAT,KACAuE,YAAA9D,KAAAuE,OAAAG,OAEAZ,aAAAE,KAAA,qBAAAL,QACAG,YAAAE,KAAA,kBAAAL,OACAG,YAAAG,WAAA,gBAAAH,YAAAI,oBAIAwE,kCAAAlD,UAAA6D,UAAA,WAIA,MAHA9J,MACAgF,OAAAG,QAEAV,KAAA,qBAGA0E,oCCnSA7J,OAAA,qDACA,+CACA,6EACA,sDACA,qDACA,kDACA,SAAAmN,QAAAC;8WACA,YAEA,OAAAD,SAAAE,aAAAD,OAAAE,aCTAtN,OAAA,8CACA,sEACA,qDACA,SAAAuN,OAAAH,QACA,YAEA,IAAAI,4BAAAD,OAAAE;8CAeA,OAbAD,4BAAAE,YAAA,WACA,GAAAC,aAEAjN,MAAAkN,eAAAR,QAEAG,OAAAG,YAAApM,KAAAZ,MAEAiN,aAAAjN,KAAA+E,WAAAG,KAAA,yBACA+H,aAAApF,QACAoF,aAAAE,SAAA,4BAIAL,6BCtCAxN,OAAA,+CAAA,cAAA,SAAAC,IACA,MAAAA,IAAAC,SAAA,SAAAC,WAAAC,OAAAC,QAAAC,SAAAC,MACAG,KAAAC,cAAA,EAAA,YACAN,QAAAK,KAAAE,MAAAP,QAAAF,WAAAE,SAAAE,KAAAA,QACA,IAAAM,QAAAC,OAAAE,OAAA,EAQA,OALAA,SAAA;kFACAF,OAAAT,QAAAyN,QAAAjN,OAAAC,OAAAQ,KAAAlB,QAAAiB,QAAAd,KAAAA,QACAO,OAAAV,QAAAA,OAAA0N,OAAAjN,OALA,kBAKAC,QAAAA,OAAAQ,KAAAlB,QAAAiB,QAAAd,KAAAA,OAAAO,SACAD,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,qMCSAhB,OAAA,sCACA,SACA,6CACA,+CACA,SAAAuJ,EAAAgE,OAAAQ;+KACA,YA6GA,QAnGAC,kBAAA,WACA,MATA,wBAiBAC,UAAA,WACA,MAAAV,SAQAW,qBAAA,WACA,OACAzM,oBAAA,QACAK,iBAAA,QACAqM,gBAAA,QACAnD,cAAA,GACApD,SAAA,GACAP,oBAAA,EAEApF,UAAA,OACAD,UAAA,OACAE,SAAA,OACAE,SAAA,OACAC,QAAA,OACAC,OAAA,OACAC,cAAA,OACA6L,YAAA,OACAC,YAAA,OACApL,QAAA,OACAC,SAAA,OACAC,SAAA,OACAG,SAAA;gBACAC,SAAA,OACAI,WAAA,OACAE,YAAA,OACAC,eAAA,OACAlB,WAAA,OACAc,WAAA,OACAD,UAAA,OACAD,WAAA,OACAJ,WAAA,OACAC,aAAA,OACAlB,eAAA,OACAmM,YAAA,OACAC,YAAA,OACAC,YAAA,OACAC,YAAA,OACA9L,cAAA,OACAiB,cAAA,OACAf,cAAA,OACAC,aAAA,OACAC,WAAA,OACAC,UAAA,OACAe,WAAA,OACAC,YAAA,OACAC,WAAA,OACAC,cAAA,OACAC,aAAA,QACAC,eAAA,UASAsK,YAAA,SAAAC,OAQAC,kBAAA,WACA,MAAAb,YAOAc,cAAA,SAAAF,IAAAG,aAEA,MADAA,aAAAhB,OAAAa,IAAApO,KAAA;6CACAuO,gBASA9O,QAAA,sCAAA,SAAA+O,QAAA,MAAAA","file":"imsPciCreator.min.js","sourcesContent":["\ndefine('tpl!mathEntryInteraction/creator/tpl/propertiesForm', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, functionType=\"function\", self=this;\n\nfunction program1(depth0,data) {\n  \n  \n  return \"checked=\\\"checked\\\"\";\n  }\n\nfunction program3(depth0,data) {\n  \n  \n  return \"style=\\\"display:none\\\"\";\n  }\n\n  buffer += \"<div class=\\\"panel\\\">\\r\\n    <label for=\\\"\\\" class=\\\"has-icon\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Response identifier\", options) : helperMissing.call(depth0, \"__\", \"Response identifier\", options)))\n    + \"</label>\\r\\n    <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content:first\\\" data-tooltip-theme=\\\"info\\\"></span>\\r\\n    <div class=\\\"tooltip-content\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The identifier of the choice. This identifier must not be used by any other response or item variable. An identifier is a string of characters that must start with a Letter or an underscore (\\\"_\\\") and contain only Letters, underscores, hyphens (\\\"-\\\"), period (\\\".\\\", a.k.a. full-stop), Digits, CombiningChars and Extenders.\", options) : helperMissing.call(depth0, \"__\", \"The identifier of the choice. This identifier must not be used by any other response or item variable. An identifier is a string of characters that must start with a Letter or an underscore (\\\"_\\\") and contain only Letters, underscores, hyphens (\\\"-\\\"), period (\\\".\\\", a.k.a. full-stop), Digits, CombiningChars and Extenders.\", options)))\n    + \"</div>\\r\\n\\r\\n    <input type=\\\"text\\\"\\r\\n           name=\\\"identifier\\\"\\r\\n           value=\\\"\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\"\\r\\n           placeholder=\\\"e.g. RESPONSE\\\"\\r\\n           data-validate=\\\"$notEmpty; $qtiIdentifier; $availableIdentifier(serial=\";\n  if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \");\\\">\\r\\n</div>\\r\\n\\r\\n<hr />\\r\\n\\r\\n<h3>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Options\", options) : helperMissing.call(depth0, \"__\", \"Options\", options)))\n    + \"</h3>\\r\\n\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"authorizeWhiteSpace\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.authorizeWhiteSpace), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"authorize white space\", options) : helperMissing.call(depth0, \"__\", \"authorize white space\", options)))\n    + \"\\r\\n    </label>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"useGapExpression\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.useGapExpression), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"use expression with gaps\", options) : helperMissing.call(depth0, \"__\", \"use expression with gaps\", options)))\n    + \"\\r\\n    </label>\\r\\n    <div class=\\\"panel mathgap-style-box\\\" \";\n  stack1 = helpers.unless.call(depth0, (depth0 && depth0.useGapExpression), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \">\\r\\n        <label for=\\\"gapStyle\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Gap size\", options) : helperMissing.call(depth0, \"__\", \"Gap size\", options)))\n    + \"</label>\\r\\n        <select name=\\\"gapStyle\\\" data-mathgap-style>\\r\\n            <option value=\\\"math-gap-small\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Small\", options) : helperMissing.call(depth0, \"__\", \"Small\", options)))\n    + \"</option>\\r\\n            <option value=\\\"math-gap-medium\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Medium\", options) : helperMissing.call(depth0, \"__\", \"Medium\", options)))\n    + \"</option>\\r\\n            <option value=\\\"math-gap-large\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Large\", options) : helperMissing.call(depth0, \"__\", \"Large\", options)))\n    + \"</option>\\r\\n        </select>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<hr />\\r\\n\\r\\n<h3>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Functions\", options) : helperMissing.call(depth0, \"__\", \"Functions\", options)))\n    + \"</h3>\\r\\n\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"tool_sqrt\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.tool_sqrt), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" height=\\\"1em\\\" width=\\\"1em\\\" viewBox=\\\"0 0 400 400\\\" version=\\\"1.0\\\">\\r\\n            <path d=\\\"m193.39062 4.859375-50.8125 317.375-79.093743-160.71876-58.781256 29.46875l6.6250007 12.5 38.687495-17.75 96.875003 199.40625 58.6875-366.28124h144.71876v-14h-142.46876-10.21874-4.21876z\\\"></path>\\r\\n            <text class=\\\"\\\">√</text>\\r\\n        </svg>\\r\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"square root\", options) : helperMissing.call(depth0, \"__\", \"square root\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"tool_frac\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.tool_frac), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"fraction\", options) : helperMissing.call(depth0, \"__\", \"fraction\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"tool_exp\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.tool_exp), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        x&#8319; \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"exponent\", options) : helperMissing.call(depth0, \"__\", \"exponent\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"tool_subscript\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.tool_subscript), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        x&#8336; \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"subscript\", options) : helperMissing.call(depth0, \"__\", \"subscript\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"tool_log\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.tool_log), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"log\", options) : helperMissing.call(depth0, \"__\", \"log\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"tool_ln\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.tool_ln), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"ln\", options) : helperMissing.call(depth0, \"__\", \"ln\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\\r\\n\\r\\n<hr />\\r\\n<h3>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Symbols\", options) : helperMissing.call(depth0, \"__\", \"Symbols\", options)))\n    + \"</h3>\\r\\n\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"tool_e\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.tool_e), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        e\\r\\n    </label>\\r\\n</div>\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"tool_infinity\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.tool_infinity), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        &#8734;\\r\\n    </label>\\r\\n</div>\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"roundbkts\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.roundbkts), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        ( ) \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"parentheses/round brackets\", options) : helperMissing.call(depth0, \"__\", \"parentheses/round brackets\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"curlybkts\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.curlybkts), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        { } \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"braces/curly brackets\", options) : helperMissing.call(depth0, \"__\", \"braces/curly brackets\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"squarebkts\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.squarebkts), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        [ ] \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"square brackets\", options) : helperMissing.call(depth0, \"__\", \"square brackets\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"tool_integral\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.tool_integral), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        &#x222b; \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Indefinite integral\", options) : helperMissing.call(depth0, \"__\", \"Indefinite integral\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\\r\\n\\r\\n<hr />\\r\\n<h3>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Geometry\", options) : helperMissing.call(depth0, \"__\", \"Geometry\", options)))\n    + \"</h3>\\r\\n\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"tool_angle\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.tool_angle), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        &ang; \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"angle\", options) : helperMissing.call(depth0, \"__\", \"angle\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"tool_integral\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.tool_integral), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Indefinite integral\", options) : helperMissing.call(depth0, \"__\", \"Indefinite integral\", options)))\n    + \"\\r\\n        </label>\\r\\n</div>\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"tool_triangle\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.tool_triangle), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        &#9651; \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"triangle\", options) : helperMissing.call(depth0, \"__\", \"triangle\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"tool_similar\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.tool_similar), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        &sim; \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"similar\", options) : helperMissing.call(depth0, \"__\", \"similar\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"tool_paral\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.tool_paral), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        &#8741; \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"is parallel with\", options) : helperMissing.call(depth0, \"__\", \"is parallel with\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"tool_perp\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.tool_perp), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        &#8869; \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"is perpendicular to\", options) : helperMissing.call(depth0, \"__\", \"is perpendicular to\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\\r\\n\\r\\n<hr />\\r\\n<h3>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Trigonometry\", options) : helperMissing.call(depth0, \"__\", \"Trigonometry\", options)))\n    + \"</h3>\\r\\n\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"tool_pi\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.tool_pi), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        &pi;\\r\\n    </label>\\r\\n</div>\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"tool_cos\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.tool_cos), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"cosinus\", options) : helperMissing.call(depth0, \"__\", \"cosinus\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"tool_sin\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.tool_sin), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"sinus\", options) : helperMissing.call(depth0, \"__\", \"sinus\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\\r\\n\\r\\n<hr />\\r\\n<h3>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Comparison\", options) : helperMissing.call(depth0, \"__\", \"Comparison\", options)))\n    + \"</h3>\\r\\n\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"tool_lower\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.tool_lower), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        &lt; \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"lower than\", options) : helperMissing.call(depth0, \"__\", \"lower than\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"tool_greater\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.tool_greater), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        &gt; \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"greater than\", options) : helperMissing.call(depth0, \"__\", \"greater than\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"tool_lte\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.tool_lte), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"≤\", options) : helperMissing.call(depth0, \"__\", \"≤\", options)))\n    + \" \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"lower than or equal\", options) : helperMissing.call(depth0, \"__\", \"lower than or equal\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"tool_gte\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.tool_gte), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"≥\", options) : helperMissing.call(depth0, \"__\", \"≥\", options)))\n    + \" \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"greater than or equal\", options) : helperMissing.call(depth0, \"__\", \"greater than or equal\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\\r\\n\\r\\n<hr />\\r\\n<h3>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Operands\", options) : helperMissing.call(depth0, \"__\", \"Operands\", options)))\n    + \"</h3>\\r\\n\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"tool_equal\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.tool_equal), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        = \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"equal\", options) : helperMissing.call(depth0, \"__\", \"equal\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"tool_plus\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.tool_plus), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        + \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"plus\", options) : helperMissing.call(depth0, \"__\", \"plus\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"tool_minus\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.tool_minus), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        – \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"minus\", options) : helperMissing.call(depth0, \"__\", \"minus\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"tool_times\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.tool_times), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        &times; \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"times\", options) : helperMissing.call(depth0, \"__\", \"times\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"tool_timesdot\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.tool_timesdot), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        · \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"times dot\", options) : helperMissing.call(depth0, \"__\", \"times dot\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"tool_divide\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.tool_divide), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        &divide; \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"divide\", options) : helperMissing.call(depth0, \"__\", \"divide\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"tool_plusminus\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.tool_plusminus), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        &#177; \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Plus/minus\", options) : helperMissing.call(depth0, \"__\", \"Plus/minus\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"tool_inmem\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.tool_inmem), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"is a member of\", options) : helperMissing.call(depth0, \"__\", \"is a member of\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"tool_ninmem\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.tool_ninmem), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"is not a member of\", options) : helperMissing.call(depth0, \"__\", \"is not a member of\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"tool_union\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.tool_union), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"set union\", options) : helperMissing.call(depth0, \"__\", \"set union\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"tool_intersec\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.tool_intersec), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"set intersection\", options) : helperMissing.call(depth0, \"__\", \"set intersection\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\\r\\n\\r\\n<hr />\\r\\n\\r\\n<h3 class=\\\"txt-error\\\"><strong><span class=\\\"icon-warning\\\"></span> \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Experimental only\", options) : helperMissing.call(depth0, \"__\", \"Experimental only\", options)))\n    + \"</strong></h3>\\r\\n\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"allowNewLine\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.allowNewLine), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"allow line break\", options) : helperMissing.call(depth0, \"__\", \"allow line break\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"enableAutoWrap\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.enableAutoWrap), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"enable auto wrap\", options) : helperMissing.call(depth0, \"__\", \"enable auto wrap\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!mathEntryInteraction/creator/tpl/addGapBtn', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<div class=\\\"add-option\\\">\\r\\n    <span class=\\\"icon-add\\\"></span> \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Add gap\", options) : helperMissing.call(depth0, \"__\", \"Add gap\", options)))\n    + \"\\r\\n</div>\";\n  return buffer;\n  });\n});\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016-2017 (original work) Open Assessment Technologies SA;\r\n */\r\n\r\ndefine('mathEntryInteraction/creator/widget/states/Question',[\r\n    'jquery',\r\n    'i18n',\r\n    'taoQtiItem/qtiCreator/widgets/states/factory',\r\n    'taoQtiItem/qtiCreator/widgets/interactions/states/Question',\r\n    'taoQtiItem/qtiCreator/widgets/helpers/formElement',\r\n    'taoQtiItem/qtiCreator/editor/simpleContentEditableElement',\r\n    'taoQtiItem/qtiCreator/editor/containerEditor',\r\n    'tpl!mathEntryInteraction/creator/tpl/propertiesForm',\r\n    'tpl!mathEntryInteraction/creator/tpl/addGapBtn'\r\n], function($, __, stateFactory, Question, formElement, simpleEditor, containerEditor, formTpl, addGapBtnTpl){\r\n    'use strict';\r\n\r\n    var $addGapBtn = $(addGapBtnTpl());\r\n\r\n    var MathEntryInteractionStateQuestion = stateFactory.extend(Question, function create(){\r\n        var $container = this.widget.$container,\r\n            $prompt = $container.find('.prompt'),\r\n            interaction = this.widget.element;\r\n\r\n        containerEditor.create($prompt, {\r\n            change : function(text){\r\n                interaction.data('prompt', text);\r\n                interaction.updateMarkup();\r\n            },\r\n            markup : interaction.markup,\r\n            markupSelector : '.prompt',\r\n            related : interaction,\r\n            areaBroker: this.widget.getAreaBroker()\r\n        });\r\n\r\n        if (toBoolean(interaction.prop('useGapExpression'), false)) {\r\n            this.createAddGapBtn();\r\n        }\r\n\r\n        this.addMathFieldListener();\r\n\r\n    }, function exit(){\r\n        var $container = this.widget.$container,\r\n            $prompt = $container.find('.prompt');\r\n\r\n        simpleEditor.destroy($container);\r\n        containerEditor.destroy($prompt);\r\n\r\n        this.removeAddGapBtn();\r\n    });\r\n\r\n    function toBoolean(value, defaultValue) {\r\n        if (typeof(value) === \"undefined\") {\r\n            return defaultValue;\r\n        } else {\r\n            return (value === true || value === \"true\");\r\n        }\r\n    }\r\n    /**\r\n     * Callback for configuration change\r\n     * @param {Object} interaction - the current interaction\r\n     * @param {String} value - new value of the changed property\r\n     * @param {String} name - changed property\r\n     */\r\n    function configChangeCallBack(interaction, value, name) {\r\n        interaction.prop(name, value);\r\n        interaction.triggerPci('configChange', [interaction.getProperties()]);\r\n    }\r\n\r\n    MathEntryInteractionStateQuestion.prototype.initForm = function initForm(){\r\n\r\n        var self = this,\r\n            _widget = this.widget,\r\n            $form = _widget.$form,\r\n            interaction = _widget.element,\r\n            response = interaction.getResponseDeclaration(),\r\n            $gapStyleBox,\r\n            $gapStyleSelector;\r\n\r\n        //render the form using the form template\r\n        $form.html(formTpl({\r\n            serial : response.serial,\r\n            identifier : interaction.attr('responseIdentifier'),\r\n\r\n            authorizeWhiteSpace: toBoolean(interaction.prop('authorizeWhiteSpace'), false),\r\n            useGapExpression: toBoolean(interaction.prop('useGapExpression'), false),\r\n            focusOnDenominator: toBoolean(interaction.prop('focusOnDenominator'), false),\r\n\r\n            tool_frac:      toBoolean(interaction.prop('tool_frac'),    true),\r\n            tool_sqrt:      toBoolean(interaction.prop('tool_sqrt'),    true),\r\n            tool_exp:       toBoolean(interaction.prop('tool_exp'),     true),\r\n            tool_log:       toBoolean(interaction.prop('tool_log'),     true),\r\n            tool_ln:        toBoolean(interaction.prop('tool_ln'),      true),\r\n            tool_e:         toBoolean(interaction.prop('tool_e'),       true),\r\n            tool_infinity:  toBoolean(interaction.prop('tool_infinity'),true),\r\n            squarebkts:     toBoolean(interaction.prop('tool_rbrack'),  true) && toBoolean(interaction.prop('tool_lbrack'), true),\r\n            tool_pi:        toBoolean(interaction.prop('tool_pi'),      true),\r\n            tool_cos:       toBoolean(interaction.prop('tool_cos'),     true),\r\n            tool_sin:       toBoolean(interaction.prop('tool_sin'),     true),\r\n            tool_lte:       toBoolean(interaction.prop('tool_lte'),     true),\r\n            tool_gte:       toBoolean(interaction.prop('tool_gte'),     true),\r\n            tool_times:     toBoolean(interaction.prop('tool_times'),   true),\r\n            tool_divide:    toBoolean(interaction.prop('tool_divide'),  true),\r\n            tool_plusminus: toBoolean(interaction.prop('tool_plusminus'),true),\r\n            roundbkts:      toBoolean(interaction.prop('tool_rparen'),  true) && toBoolean(interaction.prop('tool_lparen'), true),\r\n            curlybkts:      toBoolean(interaction.prop('tool_rbrace'),  true) && toBoolean(interaction.prop('tool_lbrace'), true),\r\n            tool_angle:     toBoolean(interaction.prop('tool_angle'),   true),\r\n            tool_minus:     toBoolean(interaction.prop('tool_minus'),   true),\r\n            tool_plus:      toBoolean(interaction.prop('tool_plus'),    true),\r\n            tool_equal:     toBoolean(interaction.prop('tool_equal'),   true),\r\n            tool_lower:     toBoolean(interaction.prop('tool_lower'),   true),\r\n            tool_greater:   toBoolean(interaction.prop('tool_greater'), true),\r\n            tool_subscript: toBoolean(interaction.prop('tool_subscript'),true),\r\n            tool_integral:  toBoolean(interaction.prop('tool_integral'),true),\r\n            tool_timesdot:  toBoolean(interaction.prop('tool_timesdot'),true),\r\n            tool_triangle:  toBoolean(interaction.prop('tool_triangle'),true),\r\n            tool_similar:   toBoolean(interaction.prop('tool_similar'), true),\r\n            tool_paral:     toBoolean(interaction.prop('tool_paral'),   true),\r\n            tool_perp:      toBoolean(interaction.prop('tool_perp'),    true),\r\n            tool_inmem:     toBoolean(interaction.prop('tool_inmem'),   true),\r\n            tool_ninmem:    toBoolean(interaction.prop('tool_ninmem'),  true),\r\n            tool_union:     toBoolean(interaction.prop('tool_union'),   true),\r\n            tool_intersec:  toBoolean(interaction.prop('tool_intersec'),true),\r\n            allowNewLine:   toBoolean(interaction.prop('allowNewLine'), false),\r\n            enableAutoWrap: toBoolean(interaction.prop('enableAutoWrap'), false)\r\n        }));\r\n\r\n        //init form javascript\r\n        formElement.initWidget($form);\r\n\r\n            //init data change callbacks\r\n            formElement.setChangeCallbacks($form, interaction, {\r\n                identifier: function(i, value){\r\n                response.id(value);\r\n                interaction.attr('responseIdentifier', value);\r\n            },\r\n            useGapExpression: function gapChangeCallback(i, value) {\r\n                if (toBoolean(value, false)) {\r\n                    self.createAddGapBtn();\r\n                    $gapStyleBox.show();\r\n                } else {\r\n                    i.prop('gapExpression', '');\r\n                    self.removeAddGapBtn();\r\n                    $gapStyleBox.hide();\r\n                }\r\n\r\n                response.attr('cardinality', 'single');\r\n                configChangeCallBack(i, value, 'useGapExpression');\r\n            },\r\n            gapStyle: function gapStyleChangeCallback(i, newStyle) {\r\n\r\n                i.prop('gapStyle', newStyle);\r\n\r\n                configChangeCallBack(i, newStyle, 'gapStyle');\r\n            },\r\n            authorizeWhiteSpace: configChangeCallBack,\r\n            focusOnDenominator: configChangeCallBack,\r\n\r\n            tool_frac:      configChangeCallBack,\r\n            tool_sqrt:      configChangeCallBack,\r\n            tool_exp:       configChangeCallBack,\r\n            tool_log:       configChangeCallBack,\r\n            tool_ln:        configChangeCallBack,\r\n            tool_e:         configChangeCallBack,\r\n            tool_infinity:  configChangeCallBack,\r\n            tool_pi:        configChangeCallBack,\r\n            tool_cos:       configChangeCallBack,\r\n            tool_sin:       configChangeCallBack,\r\n            tool_lte:       configChangeCallBack,\r\n            tool_gte:       configChangeCallBack,\r\n            tool_times:     configChangeCallBack,\r\n            tool_divide:    configChangeCallBack,\r\n            tool_plusminus: configChangeCallBack,\r\n            tool_angle:     configChangeCallBack,\r\n            tool_minus:     configChangeCallBack,\r\n            tool_plus:      configChangeCallBack,\r\n            tool_equal:     configChangeCallBack,\r\n            tool_lower:     configChangeCallBack,\r\n            tool_greater:   configChangeCallBack,\r\n            tool_subscript: configChangeCallBack,\r\n            tool_integral:  configChangeCallBack,\r\n            tool_timesdot:  configChangeCallBack,\r\n            tool_triangle:  configChangeCallBack,\r\n            tool_similar:   configChangeCallBack,\r\n            tool_paral:     configChangeCallBack,\r\n            tool_perp:      configChangeCallBack,\r\n            tool_inmem:     configChangeCallBack,\r\n            tool_ninmem:    configChangeCallBack,\r\n            tool_union:     configChangeCallBack,\r\n            tool_intersec:  configChangeCallBack,\r\n\r\n            squarebkts: function squarebktsChangeCallBack(i, value) {\r\n                i.prop('tool_lbrack', value);\r\n                i.prop('tool_rbrack', value);\r\n                i.triggerPci('configChange', [i.getProperties()]);\r\n            },\r\n            roundbkts: function roundbktsChangeCallBack(i, value) {\r\n                i.prop('tool_lparen', value);\r\n                i.prop('tool_rparen', value);\r\n                i.triggerPci('configChange', [i.getProperties()]);\r\n            },\r\n            curlybkts: function curlybktsChangeCallBack(i, value) {\r\n                i.prop('tool_lbrace', value);\r\n                i.prop('tool_rbrace', value);\r\n                i.triggerPci('configChange', [i.getProperties()]);\r\n            },\r\n\r\n            allowNewLine: configChangeCallBack,\r\n            enableAutoWrap: configChangeCallBack\r\n        });\r\n\r\n\r\n        $gapStyleBox = $form.find('.mathgap-style-box');\r\n        $gapStyleSelector = $gapStyleBox.find('[data-mathgap-style]');\r\n\r\n        $gapStyleSelector.select2({\r\n            width: '100%',\r\n            minimumResultsForSearch: Infinity\r\n        })\r\n        .val(interaction.prop('gapStyle'))\r\n        .trigger('change');\r\n    };\r\n\r\n    /**\r\n     * Change callback for editable math field\r\n     */\r\n\r\n    MathEntryInteractionStateQuestion.prototype.addMathFieldListener = function addMathFieldListener() {\r\n        var _widget = this.widget,\r\n            interaction = _widget.element;\r\n\r\n        interaction.onPci('responseChange', function(latex) {\r\n            if (toBoolean(interaction.prop('useGapExpression'), false)) {\r\n                interaction.prop('gapExpression', latex);\r\n            } else {\r\n                interaction.prop('gapExpression', '');\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Display the \"Add Gap\" button\r\n     */\r\n    MathEntryInteractionStateQuestion.prototype.createAddGapBtn = function createAddGapBtn() {\r\n        var _widget = this.widget,\r\n            $container = _widget.$container,\r\n            $toolbar = $container.find('.toolbar'),\r\n            interaction =_widget.element;\r\n\r\n        if ($toolbar.length) {\r\n            $toolbar.after($addGapBtn);\r\n            $addGapBtn.on('click', function() {\r\n                interaction.getResponseDeclaration().removeMapEntries();\r\n                interaction.triggerPci('addGap');\r\n            });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Remove the \"Add Gap\" button from the DOM\r\n     */\r\n    MathEntryInteractionStateQuestion.prototype.removeAddGapBtn = function removeAddGapBtn() {\r\n        $addGapBtn.off('click');\r\n        $addGapBtn.remove();\r\n    };\r\n\r\n    return MathEntryInteractionStateQuestion;\r\n});\r\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2021 (original work) Open Assessment Technologies SA;\r\n */\r\ndefine('mathEntryInteraction/creator/widget/states/Correct',[\r\n    'taoQtiItem/qtiCreator/widgets/states/factory',\r\n    'taoQtiItem/qtiCreator/widgets/states/Correct'\r\n], function (stateFactory, Correct) {\r\n    'use strict';\r\n\r\n    var InteractionStateCorrect = stateFactory.create(\r\n        Correct,\r\n        function init() {\r\n            this.widget.element.getResponseDeclaration().setTemplate('MAP_RESPONSE');\r\n            this.widget.changeState('map');\r\n        },\r\n        function exit() {\r\n        }\r\n    );\r\n\r\n    return InteractionStateCorrect;\r\n});\r\n\n","\ndefine('tpl!mathEntryInteraction/creator/tpl/answerForm', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1, helper, options;\n  buffer += \"\\r\\n                <div class=\\\"correct-answer-entry\\\" data-index=\\\"\"\n    + escapeExpression(((stack1 = (data == null || data === false ? data : data.index)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\">\\r\\n                    <p>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Correct answer option\", options) : helperMissing.call(depth0, \"__\", \"Correct answer option\", options)))\n    + \" \"\n    + escapeExpression((helper = helpers.increaseIndex || (depth0 && depth0.increaseIndex),options={hash:{},data:data},helper ? helper.call(depth0, (data == null || data === false ? data : data.index), options) : helperMissing.call(depth0, \"increaseIndex\", (data == null || data === false ? data : data.index), options)))\n    + \"</p>\\r\\n                    <a href=\\\"#\\\" class=\\\"answer-edit\\\">\\r\\n                        <span class=\\\"icon-edit\\\"></span>\\r\\n                        <span>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"edit the answer\", options) : helperMissing.call(depth0, \"__\", \"edit the answer\", options)))\n    + \"</span>\\r\\n                    </a>\\r\\n\\r\\n                    <br>\\r\\n\\r\\n                    <a href=\\\"#\\\" class=\\\"answer-delete\\\">\\r\\n                        <span class=\\\"icon-bin\\\"></span>\\r\\n                        <span>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"delete the answer\", options) : helperMissing.call(depth0, \"__\", \"delete the answer\", options)))\n    + \"</span>\\r\\n                    </a>\\r\\n                </div>\\r\\n                <br>\\r\\n                \";\n  return buffer;\n  }\n\n  buffer += \"<div class=\\\"panel mathEntryInteraction\\\">\\r\\n    <hr>\\r\\n    <h3>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Define correct responses\", options) : helperMissing.call(depth0, \"__\", \"Define correct responses\", options)))\n    + \":</h3>\\r\\n    <div class=\\\"answer-entries-config\\\" data-config-for-hot-uid=\\\"\"\n    + escapeExpression(((stack1 = (data == null || data === false ? data : data.key)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\">\\r\\n        <div class=\\\"panel\\\">\\r\\n            <div class=\\\"entry-config\\\">\\r\\n                \";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.correctAnswerEntries), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n</div>\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!mathEntryInteraction/creator/tpl/addAnswerOption', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<button class=\\\"add-answer-option btn-info\\\">\\r\\n    <i class=\\\"adder\\\"> </i> \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Add answer option\", options) : helperMissing.call(depth0, \"__\", \"Add answer option\", options)))\n    + \"\\r\\n</button>\";\n  return buffer;\n  });\n});\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2021 (original work) Open Assessment Technologies SA;\r\n */\r\ndefine('mathEntryInteraction/creator/widget/states/Map',[\r\n    'handlebars',\r\n    'i18n',\r\n    'lodash',\r\n    'jquery',\r\n    'taoQtiItem/qtiCreator/widgets/states/factory',\r\n    'taoQtiItem/qtiCreator/widgets/states/Map',\r\n    'taoQtiItem/qtiCreator/widgets/helpers/formElement',\r\n    'tpl!mathEntryInteraction/creator/tpl/answerForm',\r\n    'tpl!mathEntryInteraction/creator/tpl/addAnswerOption',\r\n], function (\r\n    hb,\r\n    __,\r\n    _,\r\n    $,\r\n    stateFactory,\r\n    Map,\r\n    formElement,\r\n    answerFormTpl,\r\n    addAnswerOptionBtn\r\n) {\r\n    'use strict';\r\n    var CORRECT_ANSWER_VALUE = 1;\r\n    hb.registerHelper('increaseIndex', function (value, options) {\r\n        return parseInt(value) + 1;\r\n    });\r\n\r\n    var MathEntryInteractionStateResponse = stateFactory.create(\r\n        Map,\r\n        function init() {\r\n            this.initGlobalVariables();\r\n            this.initForm();\r\n        },\r\n        function exit() {\r\n            this.emptyGapFields();\r\n            this.toggleResponseMode(false);\r\n            this.saveAnswers();\r\n            this.removeResponseChangeEventListener();\r\n            this.removeEditDeleteListeners();\r\n            this.removeAddButtonListener();\r\n            this.destroyForm();\r\n        }\r\n    );\r\n\r\n\r\n    MathEntryInteractionStateResponse.prototype.initGlobalVariables = function initGlobalVariables() {\r\n        var self = this,\r\n            interaction = self.widget.element;\r\n        self.activeEditId = null;\r\n        self.correctResponses = [];\r\n\r\n        if (this.inGapMode(self) === true) {\r\n            interaction = self.widget.element;\r\n            self.gapTemplate = interaction.prop('gapExpression');\r\n        }\r\n    }\r\n\r\n    MathEntryInteractionStateResponse.prototype.initForm = function initForm() {\r\n        var self = this,\r\n            interaction = self.widget.element,\r\n            $responseForm = self.widget.$responseForm;\r\n\r\n        this.initResponseChangeEventListener();\r\n        self.correctResponses = this.getExistingCorrectAnswerOptions();\r\n        $responseForm.html(addAnswerOptionBtn());\r\n        this.initAddAnswerButton();\r\n        this.renderForm(self.correctResponses);\r\n    }\r\n\r\n    MathEntryInteractionStateResponse.prototype.initAddAnswerButton = function initAddAnswerButton() {\r\n        var self = this,\r\n            interaction = self.widget.element,\r\n            $responseForm = self.widget.$responseForm,\r\n            $addAnswerBtn = $responseForm.find($('.add-answer-option'));\r\n\r\n        $addAnswerBtn.on('click', function () {\r\n            var newCorrectAnswer;\r\n\r\n            if (self.inGapMode() === true) {\r\n                self.emptyGapFields();\r\n                var gapExpression = interaction.prop('gapExpression');\r\n                var gapCount = (gapExpression.match(/\\\\taoGap/g) || []).length;\r\n                if (gapCount > 0) {\r\n                    newCorrectAnswer = [];\r\n                    for (var i = 0; i < gapCount; i++) {\r\n                        newCorrectAnswer.push(' ');\r\n                    }\r\n\r\n                    newCorrectAnswer = newCorrectAnswer.join(',');\r\n                } else {\r\n                    newCorrectAnswer = '';\r\n                }\r\n            } else {\r\n                newCorrectAnswer = '';\r\n                self.toggleResponseMode(false);\r\n            }\r\n\r\n            self.correctResponses.push(newCorrectAnswer);\r\n            self.renderForm(self.correctResponses);\r\n        });\r\n    }\r\n\r\n    MathEntryInteractionStateResponse.prototype.getExistingCorrectAnswerOptions = function getExistingCorrectAnswerOptions() {\r\n        var self = this,\r\n            interaction = self.widget.element;\r\n\r\n        var mapEntries = interaction.getResponseDeclaration().getMapEntries();\r\n        return _.keys(mapEntries) || [];\r\n    }\r\n\r\n    MathEntryInteractionStateResponse.prototype.initResponseChangeEventListener = function initResponseChangeEventListener() {\r\n        var self = this,\r\n            interaction = self.widget.element;\r\n\r\n        interaction.onPci('responseChange', function (latex) {\r\n            if (!self.inGapMode(self) && self.activeEditId != null) {\r\n                self.correctResponses[self.activeEditId] = latex;\r\n            } else if (self.inGapMode(self) && self.activeEditId != null) {\r\n                var response = interaction.getResponse();\r\n                self.correctResponses[self.activeEditId] = response.base.string;\r\n            }\r\n        });\r\n    }\r\n\r\n    MathEntryInteractionStateResponse.prototype.removeResponseChangeEventListener = function removeResponseChangeEventListener() {\r\n        var self = this,\r\n            interaction = self.widget.element;\r\n\r\n        interaction.offPci('responseChange');\r\n    }\r\n\r\n    MathEntryInteractionStateResponse.prototype.initEditingOptions = function initEditingOptions() {\r\n        var self = this,\r\n            interaction = self.widget.element,\r\n            $responseForm = self.widget.$responseForm,\r\n            $entryConfig = $responseForm.find('.entry-config'),\r\n            $editButtons = $entryConfig.find('.answer-edit');\r\n\r\n        $editButtons.click(function (e) {\r\n            e.preventDefault();\r\n            e.stopImmediatePropagation();\r\n            self.toggleResponseMode(true);\r\n            var selectedEditId = parseInt($(e.target).closest('div').attr('data-index'));\r\n\r\n            if (self.activeEditId !== selectedEditId) {\r\n\r\n                if (self.inGapMode() === true) {\r\n                    self.activeEditId = selectedEditId;\r\n                    var response = self.getGapResponseObject(self.correctResponses[self.activeEditId]);\r\n                    interaction.triggerPci('latexGapInput', [response]);\r\n                } else {\r\n                    self.activeEditId = selectedEditId;\r\n                    interaction.triggerPci('latexInput', [self.correctResponses[self.activeEditId]]);\r\n                }\r\n            } else {\r\n                self.emptyGapFields();\r\n            }\r\n        });\r\n    }\r\n\r\n    // forming gap response object to be further processed by the latexGapInput event\r\n    MathEntryInteractionStateResponse.prototype.getGapResponseObject = function getGapResponseObject(response) {\r\n        return {\r\n            base: {\r\n                string: response.split(',')\r\n            }\r\n        }\r\n    }\r\n\r\n    // removing all saved map entries\r\n    MathEntryInteractionStateResponse.prototype.clearMapEntries = function clearMapEntries() {\r\n        var self = this,\r\n            interaction = self.widget.element,\r\n            response = interaction.getResponseDeclaration(),\r\n            mapEntries = response.getMapEntries();\r\n\r\n        _.keys(mapEntries).forEach(function (mapKey) {\r\n            response.removeMapEntry(mapKey, true);\r\n        });\r\n    }\r\n\r\n    MathEntryInteractionStateResponse.prototype.initDeletingOptions = function initDeletingOptions() {\r\n        var self = this,\r\n            interaction = self.widget.element,\r\n            $responseForm = self.widget.$responseForm,\r\n            $entryConfig = $responseForm.find('.entry-config'),\r\n            $deleteButtons = $entryConfig.find('.answer-delete');\r\n\r\n        $deleteButtons.click(function (e) {\r\n            e.preventDefault();\r\n            e.stopImmediatePropagation();\r\n            var id = parseInt($(e.target).closest('div').attr('data-index'));\r\n\r\n            if (self.inGapMode() === true) {\r\n                self.activeEditId = id;\r\n                self.emptyGapFields();\r\n            } else {\r\n                self.activeEditId = null;\r\n                self.toggleResponseMode(false);\r\n            }\r\n\r\n            self.correctResponses.splice(id, 1);\r\n            self.renderForm(self.correctResponses);\r\n        });\r\n    }\r\n\r\n    MathEntryInteractionStateResponse.prototype.renderForm = function renderForm(correctAnswerOptions) {\r\n        var self = this,\r\n            $responseForm = self.widget.$responseForm;\r\n\r\n        this.removeEditDeleteListeners();\r\n        $responseForm.find('.mathEntryInteraction').remove();\r\n        $responseForm.append(answerFormTpl({correctAnswerEntries: correctAnswerOptions}));\r\n        this.initDeletingOptions();\r\n        this.initEditingOptions();\r\n    }\r\n\r\n    /**\r\n     *   remove all event listeners to avoid any potential memory leaks\r\n     */\r\n    MathEntryInteractionStateResponse.prototype.removeEditDeleteListeners = function removeEditDeleteListeners() {\r\n        var self = this,\r\n            $entryConfig = self.widget.$responseForm.find('.entry-config');\r\n\r\n        $entryConfig.find('.answer-edit').off('click');\r\n        $entryConfig.find('.answer-delete').off('click');\r\n    }\r\n\r\n    MathEntryInteractionStateResponse.prototype.removeAddButtonListener = function removeAddButtonListener() {\r\n        var self = this,\r\n            $responseForm = self.widget.$responseForm;\r\n\r\n        $responseForm.find($('.add-answer-option')).off('click');\r\n    }\r\n\r\n    MathEntryInteractionStateResponse.prototype.destroyForm = function destroyForm() {\r\n        var self = this,\r\n            $responseForm = self.widget.$responseForm;\r\n\r\n        $responseForm.find('.mathEntryInteraction').remove();\r\n    }\r\n\r\n    MathEntryInteractionStateResponse.prototype.saveAnswers = function saveAnswers() {\r\n        var self = this,\r\n            interaction = self.widget.element,\r\n            responseDeclaration = interaction.getResponseDeclaration();\r\n\r\n        this.clearMapEntries();\r\n\r\n        if (this.inGapMode() === true) {\r\n            self.correctResponses = self.correctResponses.filter(function (response) {\r\n                return response.split(',').indexOf('') === -1;\r\n            });\r\n        }\r\n\r\n        self.correctResponses.forEach(function (response) {\r\n            responseDeclaration.setMapEntry(response, CORRECT_ANSWER_VALUE, false);\r\n        });\r\n    }\r\n\r\n    /**\r\n     *   if in gap mode: will empty all the gap fields\r\n     */\r\n    MathEntryInteractionStateResponse.prototype.emptyGapFields = function emptyGapFields() {\r\n        var self = this,\r\n            interaction = self.widget.element;\r\n\r\n        if (this.inGapMode() === true) {\r\n            self.activeEditId = null;\r\n\r\n            interaction.prop('gapExpression', self.gapTemplate);\r\n            this.toggleResponseMode(false);\r\n        }\r\n    }\r\n\r\n    MathEntryInteractionStateResponse.prototype.toggleResponseMode = function toggleResponseMode(value) {\r\n        var self = this,\r\n            interaction = self.widget.element;\r\n\r\n        if (interaction.prop('inResponseState') !== value) {\r\n            interaction.prop('inResponseState', value);\r\n            interaction.triggerPci('configChange', [interaction.getProperties()]);\r\n        }\r\n    }\r\n\r\n    MathEntryInteractionStateResponse.prototype.inGapMode = function inGapMode() {\r\n        var self = this,\r\n            interaction = self.widget.element;\r\n\r\n        return interaction.prop('useGapExpression');\r\n    }\r\n\r\n    return MathEntryInteractionStateResponse;\r\n});\r\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\r\n */\r\n\r\ndefine('mathEntryInteraction/creator/widget/states/states',[\r\n    'taoQtiItem/qtiCreator/widgets/states/factory',\r\n    'taoQtiItem/qtiCreator/widgets/interactions/customInteraction/states/states',\r\n    'mathEntryInteraction/creator/widget/states/Question',\r\n    'mathEntryInteraction/creator/widget/states/Correct',\r\n    'mathEntryInteraction/creator/widget/states/Map'\r\n], function(factory, states){\r\n    'use strict';\r\n\r\n    return factory.createBundle(states, arguments);\r\n});\r\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\r\n */\r\n\r\ndefine('mathEntryInteraction/creator/widget/Widget',[\r\n    'taoQtiItem/qtiCreator/widgets/interactions/customInteraction/Widget',\r\n    'mathEntryInteraction/creator/widget/states/states'\r\n], function(Widget, states){\r\n    'use strict';\r\n\r\n    var MathEntryInteractionWidget = Widget.clone();\r\n\r\n    MathEntryInteractionWidget.initCreator = function initCreator() {\r\n        var $interaction;\r\n\r\n        this.registerStates(states);\r\n\r\n        Widget.initCreator.call(this);\r\n\r\n        $interaction = this.$container.find('.mathEntryInteraction');\r\n        if ($interaction.length) {\r\n            $interaction.addClass('tao-qti-creator-context');\r\n        }\r\n    };\r\n\r\n    return MathEntryInteractionWidget;\r\n});\n","\ndefine('tpl!mathEntryInteraction/creator/tpl/markup', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\";\n\n\n  buffer += \"<div class=\\\"mathEntryInteraction\\\">\\r\\n    <div class=\\\"prompt\\\">\";\n  if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"</div>\\r\\n    <div class=\\\"math-entry\\\">\\r\\n        <div class=\\\"toolbar\\\"></div>\\r\\n        <div>\\r\\n            <span class=\\\"math-entry-input\\\"></span>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";\n  return buffer;\n  });\n});\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016-2021 (original work) Open Assessment Technologies SA;\r\n *\r\n * @author Christophe Noël <christophe@taotesting.com>\r\n *\r\n */\r\n\r\ndefine('mathEntryInteraction/imsPciCreator',[\r\n    'lodash',\r\n    'mathEntryInteraction/creator/widget/Widget',\r\n    'tpl!mathEntryInteraction/creator/tpl/markup'\r\n], function (_, Widget, markupTpl) {\r\n    'use strict';\r\n\r\n    var _typeIdentifier = 'mathEntryInteraction';\r\n\r\n    var mathEntryInteractionCreator = {\r\n        /**\r\n         * (required) Get the typeIdentifier of the custom interaction\r\n         *\r\n         * @returns {String}\r\n         */\r\n        getTypeIdentifier: function getTypeIdentifier() {\r\n            return _typeIdentifier;\r\n        },\r\n        /**\r\n         * (required) Get the widget prototype\r\n         * Used in the renderer\r\n         *\r\n         * @returns {Object} Widget\r\n         */\r\n        getWidget: function getWidget() {\r\n            return Widget;\r\n        },\r\n        /**\r\n         * (optional) Get the default properties values of the pci.\r\n         * Used on new pci instance creation\r\n         *\r\n         * @returns {Object}\r\n         */\r\n        getDefaultProperties: function getDefaultProperties() {\r\n            return {\r\n                authorizeWhiteSpace: 'false',\r\n                useGapExpression: 'false',\r\n                inResponseState: 'false',\r\n                gapExpression: '',\r\n                gapStyle: '',\r\n                focusOnDenominator: false,\r\n\r\n                tool_frac: 'true',\r\n                tool_sqrt: 'true',\r\n                tool_exp: 'true',\r\n                tool_log: 'true',\r\n                tool_ln: 'true',\r\n                tool_e: 'true',\r\n                tool_infinity: 'true',\r\n                tool_lbrack: 'true',\r\n                tool_rbrack: 'true',\r\n                tool_pi: 'true',\r\n                tool_cos: 'true',\r\n                tool_sin: 'true',\r\n                tool_lte: 'true',\r\n                tool_gte: 'true',\r\n                tool_times: 'true',\r\n                tool_divide: 'true',\r\n                tool_plusminus: 'true',\r\n                tool_angle: 'true',\r\n                tool_minus: 'true',\r\n                tool_plus: 'true',\r\n                tool_equal: 'true',\r\n                tool_lower: 'true',\r\n                tool_greater: 'true',\r\n                tool_subscript: 'true',\r\n                tool_lbrace: 'true',\r\n                tool_rbrace: 'true',\r\n                tool_lparen: 'true',\r\n                tool_rparen: 'true',\r\n                tool_integral: 'true',\r\n                tool_timesdot: 'true',\r\n                tool_triangle: 'true',\r\n                tool_similar: 'true',\r\n                tool_paral: 'true',\r\n                tool_perp: 'true',\r\n                tool_inmem: 'true',\r\n                tool_ninmem: 'true',\r\n                tool_union: 'true',\r\n                tool_intersec: 'true',\r\n                allowNewLine: 'false',\r\n                enableAutoWrap: 'false'\r\n            };\r\n        },\r\n        /**\r\n         * (optional) Callback to execute on the\r\n         * Used on new pci instance creation\r\n         *\r\n         * @returns {Object}\r\n         */\r\n        afterCreate: function afterCreate(pci) {\r\n            //do some stuff\r\n        },\r\n        /**\r\n         * (required) Gives the qti pci xml template\r\n         *\r\n         * @returns {function} handlebar template\r\n         */\r\n        getMarkupTemplate: function getMarkupTemplate() {\r\n            return markupTpl;\r\n        },\r\n        /**\r\n         * (optional) Allows passing additional data to xml template\r\n         *\r\n         * @returns {function} handlebar template\r\n         */\r\n        getMarkupData: function getMarkupData(pci, defaultData) {\r\n            defaultData.prompt = pci.data('prompt');\r\n            return defaultData;\r\n        }\r\n    };\r\n\r\n    //since we assume we are in a tao context, there is no use to expose the a global object for lib registration\r\n    //all libs should be declared here\r\n    return mathEntryInteractionCreator;\r\n});\r\n\n"]}